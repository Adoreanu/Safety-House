#include <LiquidCrystal.h>
#include "EmonLib.h"  
#include<dht.h>
dht DHT;
#define DHT11_PIN 8

\
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
EnergyMonitor emon1; 
const int sensorMin = 0;     // sensor minimum
const int sensorMax = 1024;  // sensor maximum
int analogSensor;
int cel;
int watt;
int Irms;
int tot;
int val;
int redLed = 9;
int yellowLed= 13;
int buzzer = 10;
int smokeA0 = A4;
int sensorMAXGAZ = 180;
int tempPin = 1;
int db;
int light = 0;

//
void setup() {
  emon1.current(5, 60);
  Serial.begin(9600);
  pinMode(6,INPUT);
  digitalWrite(6,LOW);
  pinMode(redLed, OUTPUT);
  pinMode(buzzer, OUTPUT);
  pinMode(smokeA0, INPUT);
  lcd.begin(16, 2);
lcd.print("Se calc. sunet");
lcd.setCursor(0, 1);
lcd.print("Sunet = " );
lcd.print(db);
lcd.print("Db");
delay(4000);
lcd.clear();
lcd.print("Analizare miscare ");
lcd.setCursor(0, 1);
if(digitalRead(6)==HIGH)  {//miscare
      lcd.print("Salut bulan.");
  }
  else  {
     lcd.print("Lume lenesa.");
  }
delay(4000);
lcd.clear();
lcd.print("Valoare gaz  ");
lcd.setCursor(0, 1);
lcd.print("Gaz = " );
lcd.print(analogSensor);
delay(4000);
lcd.clear();
lcd.print("Analizare lumina ");
lcd.setCursor(0, 1);
   unsigned int DigitalValue;

DigitalValue = digitalRead(7);

if (digitalRead(7)==1)
{
 lcd.println("Intuneric");
}
else
{
 lcd.println("Lumina");
}
delay(2000);
delay(4000);
lcd.clear();
lcd.print(" Se analizeaza ");
lcd.setCursor(0,1);
lcd.print(" prez. focului ");
delay(4000);
lcd.clear();
lcd.print("Se calc. temp.");
lcd.setCursor(0, 1);
lcd.print("si umiditatea");
delay(4000);
lcd.clear();
lcd.print("Se calculeaza w");
lcd.setCursor(0, 1);
lcd.print("Putere=" );
lcd.print(watt);
lcd.print("W");
delay(4000);
lcd.clear();
lcd.print("Intensitatea");
lcd.setCursor(0, 1);
lcd.print("I= ");
lcd.print(Irms);
lcd.print(" A");
delay(4000);
lcd.clear();
lcd.print("Cost estimat/L");
lcd.setCursor(0, 1);
lcd.print("Cost=");
lcd.print(tot);
lcd.print(" lei");
delay(4000);
lcd.clear();
}

void loop() 
{ 
// flame sensor
int sensorReading = analogRead(A2);
int range = map(sensorReading, sensorMin, sensorMax, 0, 3);
switch (range) {
  case 0:    // A fire closer than 1.5 feet away.
    lcd.println("Close Fire");
    break;
  case 1:    // A fire between 1-3 feet away.
    lcd.println("Distant Fire");
    break;
  case 2:    // No fire detected.
    lcd.println("No Fire");
    break;
}
  //curent
   double Irms = emon1.calcIrms(1480);  // Calculate Irms only
  if(Irms<1.0)Irms=0;
  double watt=(Irms*220.0-300)/2;
  //double watt=(Irms*220.0);
  if(watt<20)watt=0;
  Serial.print("W = ");
  Serial.print(watt);         // Apparent power
  Serial.print(" kW = ");
  Serial.print(watt/1000);Serial.print(" A = ");
  Serial.print(Irms);          // Irms
  double tot=(watt/1000)*0.6;
  Serial.print(" ");Serial.print("Cost estimat/L = ");
  Serial.println(tot);
  //lcd.print("W=");
  //
   
 
  
  //delay(1000);
  val=analogRead(1);//sunet
  Serial.print("Sound=");
  //Serial.println(val,DEC);//print the sound value to serial   
  db=int(((val+83.2073)/11.003)/2);
  Serial.print(db,DEC);  Serial.println("DB");
  if (db>80)
  {
    digitalWrite(redLed, HIGH);
  }
  else if(db<80)
  {
    digitalWrite(redLed, LOW);
  }
  
  if(digitalRead(6)==HIGH)  
  {
      Serial.println("Somebody is here.");
      digitalWrite(redLed, HIGH);
  }
  else  {
      Serial.println("Nobody.");
      digitalWrite(redLed, LOW);
  }
 
  int analogSensor = analogRead(smokeA0);//gaz
  Serial.print("Pin A0: ");
  Serial.println(analogSensor);
  // Checks if it has reached the threshold value
  if (analogSensor > sensorMAXGAZ)
  {
    digitalWrite(redLed, HIGH);
    tone(buzzer, 10000, 3000);
  }
  else
  {
    digitalWrite(redLed, LOW);
    noTone(buzzer);
  }
  //lumina
   light = digitalRead(7);
   Serial.println(light);
   if(light=1) 
   { 
        Serial.print("Intuneric");
        digitalWrite(redLed, HIGH);
   }
   else
   {
        Serial.print("Lumina");
        digitalWrite(redLed, LOW);
   }
  delay(5000);
  lcd.begin(16, 2);
lcd.print("Se calc. sunet");
lcd.setCursor(0, 1);
lcd.print("Sunet = " );
lcd.print(db);
lcd.print("Db");
delay(4000);
lcd.clear();
lcd.print("Cautare miscare");
lcd.setCursor(0, 1);
if(digitalRead(6)==HIGH)  
{
      lcd.print("Salut bulan.");
  }
  else  {
     lcd.print("Lume lenesa.");
  }
delay(4000);
lcd.clear();
lcd.print("Valoare gaz");
lcd.setCursor(0, 1);
lcd.print("Gaz = " );
lcd.print(analogSensor);
delay(4000);
lcd.clear();
lcd.print("Analizare lumina");
lcd.setCursor(0, 1);
unsigned int DigitalValue;
   DigitalValue = digitalRead(7);

if (digitalRead(7)==1)
{
      lcd.println("Intuneric.");
}
else
{
  lcd.println("Lumina.");
}
delay(4000);
lcd.clear();
lcd.print("Rezultat analiza");
lcd.setCursor(0,1);
lcd.print("prezenta foc");
lcd.clear();
int chk = DHT.read11(DHT11_PIN);
lcd.print("Temp.=.");
lcd.println(DHT.temperature,1);
lcd.print("*C");
lcd.setCursor(0, 1);
lcd.print("Umiditatea=.");
lcd.println(DHT.humidity,1);
lcd.print("%");
delay(4000);
lcd.clear();
lcd.print("Se calculeaza w");
lcd.setCursor(0, 1);
lcd.print("Putere=" );
lcd.print(watt);
lcd.print("W");
delay(4000);
lcd.clear();
lcd.print("Intensitatea");
lcd.setCursor(0, 1);
lcd.print("I= ");
lcd.print(Irms);
lcd.print(" A");
delay(4000);
lcd.clear();
lcd.print("Cost estimat/L");
lcd.setCursor(0, 1);
lcd.print("Cost=");
lcd.print(tot);
lcd.print(" lei");
delay(4000);
lcd.clear();
}